анограммы
s1=input()
s2=input()
def func(s1, s2):
    b=True;
    for i in s1:
        if i not in s2:
            b=False;
    if b==True and len(s1)==len(s2):
        return "annogramms";
    else:
        return "not annogramms";
print(func(s1,s2))

сортировка колоды
from random import*
def deck_card(x):

    if len(x)<=4:
        return sorted(x)

    else:
        pivot=randint(1, max(x))
        lt=[]
        rt=[]
        for i in x:
            if i>pivot:
                rt.append(i)

            elif i<=pivot:
                lt.append(i)

        return (deck_card(lt)+deck_card(rt))
print(deck_card([4, 2, 7, 1, 3, 5]))
print(deck_card([10, 5, 3, 8]))
print(deck_card([1]))
print(deck_card([3, 2]))
print(deck_card([7, 3, 3, 4, 1, 2, 5]))

линейный поиск
n=int(input())
arr=[int(input()) for i in range(n)]
tar=int(input())
def linsech(arr, tar):
    if len(arr)==0:
        return -1
    if len(arr)==1 and arr[0]==tar:
        return a[0]
    for i in range(len(arr)):
        if arr[i]==tar:
            return i
print(linsech(arr, tar))

бинарный поиск
def binary_search(x, tar):
    mid = len(x) // 2
    if tar == x[mid]:
        return mid
    if tar not in x:
        return -1
    if tar < x[mid]:
        x = x[:mid]
        return binary_search(x, tar)
    else:
        x = x[mid:]
        return binary_search(x, tar)
print(binary_search([1, 2, 3, 4, 5, 6, 7], 4))

частые значения
n=int(input())
m=int(input())
a=[int(input()) for i in range(n)]
q1 = int(input())
q2 = int(input())

for i in range(m):
    qq=a[q1:q2]
    mx=0
    for j in qq:
        if qq.count(j)>mx:
            mx=qq.count(j)
    print(mx)

взаимные циклы
max_len = 0
answer = 0
for d in range(2, 1000):
    remainder = 1
    remainders = []

    while remainder != 0:
        remainder = (remainder * 10) % d
        if remainder in remainders:
            length = len(remainders) - remainders.index(remainder)
            if length > max_len:
                max_len = length
                answer = d
            break
        remainders.append(remainder)
print(answer)

делимость подстроки
s= '1406357289'
def func(s):
    soft=[2, 3, 5, 7, 11, 13, 17]
    r=[]
    if s[0]!='0':
        for i in range(1,len(s)-2):
            b=int(s[i:i+3])
            for j in soft:
                if b%j==0:
                    r.append(b)
    return sum(r)
s='1406357289'
print(func(s))
