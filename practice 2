task 2
r = [input().strip().lower() for _ in range(4)]
result = decode(r)
colors = {'bk':'0','br':'1','rd':'2','or':'3','yl':'4','gr':'5','bl':'6','vi':'7','gy':'8','wh':'9','au':'au','ag':'ag'}
mn = {'0':1,'1':10,'2':100,'3':1000,'4':10000,'5':100000,'6':1000000,'7':10000000,'8':100000000,'9':1000000000,'au':0.1,'ag':0.01}
tol = {'1':1,'2':2,'4':5,'5':0.5,'6':0.25,'7':0.1,'8':0.05,'au':5,'ag':10}

def decode(bands):
    a,b,c,d = [colors[band] for band in bands]
    if a in 'auag' or b in 'auag': return None, None
    return (int(a+b) * mn[c], tol.get(d, 20))
print(result)
yask 3
morse = dict((
('A', '.-'),
(' ', '/'),
('B', '-...'),
('C', '-.-.'),
('D', '-..'),
('E', '.'),
('F', '..-.'),
('G', '--.'),
('H', '....'),
('I', '..'),
('J', '.---'),
('K', '-.-'),
('L', '.-..'),
('M', '--'),
('N', '-.'),
('O', '---'),
('P', '.--.'),
('Q', '--.-'),
('R', '.-.'),
('S', '...'),
('T', '-'),
('U', '..-'),
('V', '...-'),
('W', '.--'),
('X', '-..-'),
('Y', '-.--'),
('Z', '--..'),
('1', '.----'),
('2', '..---'),
('3', '...--'),
('4', '....-'),
('5', '.....'),
('6', '-....'),
('7', '--...'),
('8', '---..'),
('9', '----.'),
('0', '-----')))





demorse = dict((
('.-', 'A'),
('/', ' '),
('-...', 'B'),
('-.-.', 'C'),
('-..', 'D'),
('.', 'E'),
('..-.', 'F'),
('--.', 'G'),
('....', 'H'),
('..', 'I'),
('.---', 'J'),
('-.-', 'K'),
('.-..', 'L'),
('--', 'M'),
('-.', 'N'),
('---', 'O'),
('.--.', 'P'),
('--.-', 'Q'),
('.-.', 'R'),
('...', 'S'),
('-', 'T'),
('..-', 'U'),
('...-', 'V'),
('.--', 'W'),
('-..-', 'X'),
('-.--', 'Y'),
('--..', 'Z'),
('.----', '1'),
('..---', '2'),
('...--', '3'),
('....-', '4'),
('.....', '5'),
('-....', '6'),
('--...', '7'),
('---..', '8'),
('----.', '9'),
('-----', '0')))





def to_morse(s):
    r=[]
    for i in s:
        r.append(morse.get(i))
    return ' '.join(r)
def from_morse(s):
    s=s.split()
    r=[]
    for i in s:
        r.append(morse1.get(i))
    return ''.join(r)
s=input()
s=to_morse(s)
print(s, from_morse(s))
task 5
n=int(input())
k=int(input())

def func(n, k):
    f = 1
    k = 1
    for i in range(1, n+1):
        f * = 1
        k * = i
    a=k
    count=0
    while fk>a:
        count+=n//a
        a*=k
    return count
print(func(n,k))
tASK 6
k=int(input())


def func(k1):
    k2=k1+1
    n=1
    while True :
        
        s1=str(k1*n)
        s2=str(k2*n)
        if sorted(s1)==sorted(s2):
            return n
        n+=1
print(func(k))
